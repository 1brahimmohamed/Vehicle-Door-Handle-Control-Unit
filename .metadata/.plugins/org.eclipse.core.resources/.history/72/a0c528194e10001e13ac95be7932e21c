/*
 * main.c
 *
 *  Created on: May 21, 2023
 *  Author: Ibrahim Mohamed
 */

#include "helpers.h"
#include "Rcc.h"

#include "Gpio.h"
#define LOCK_LED 0
#define AMBIENT_LED 5
#define HAZARD_LED 10

#define LOCK_UNLOCK_BTN 0
#define OPEN_CLOSE_BTN 3

enum doorLockingState *doorLockingState;
enum vehicleState *vehicleState;

int main(void){


	/*enable PORT A and B */
	Rcc_Init();
	Rcc_Enable(RCC_GPIOA);
	Rcc_Enable(RCC_GPIOB);



	/*set LED pins as outputs*/
	Gpio_ConfigPin(GPIO_PORT_B, LOCK_LED, GPIO_OUTPUT, GPIO_PUSH_PULL);
	Gpio_ConfigPin(GPIO_PORT_B, AMBIENT_LED, GPIO_OUTPUT, GPIO_PUSH_PULL);
	Gpio_ConfigPin(GPIO_PORT_B, HAZARD_LED, GPIO_OUTPUT, GPIO_PUSH_PULL);


	/*set push buttons as inputs*/
	Gpio_ConfigPin(GPIO_PORT_A, LOCK_UNLOCK_BTN, GPIO_INPUT, GPIO_PULL_UP);
	Gpio_ConfigPin(GPIO_PORT_A, OPEN_CLOSE_BTN, GPIO_INPUT, GPIO_PULL_UP);

	/*default state all LEDS are off and door is locked & closed*/
	Gpio_WritePin(GPIO_PORT_B, LOCK_LED, LOW);
	Gpio_WritePin(GPIO_PORT_B, AMBIENT_LED, LOW);
	Gpio_WritePin(GPIO_PORT_B, HAZARD_LED, LOW);

	*doorLockingState = DOOR_LOCKED;
	*vehicleState = CLOSED;


	while(1)
	{


		//if door is closed and unlocked no btns pressed for more then 10 s-->  lock (antitheft lock)

		if(GPIO_ReadPinState(GPIO_PORT_A, OPEN_CLOSE_BTN))
			Gpio_WritePin(GPIO_PORT_B, LOCK_LED, HIGH);

		if(GPIO_ReadPinState(GPIO_PORT_A, LOCK_UNLOCK_BTN))
			Gpio_WritePin(GPIO_PORT_B, LOCK_LED, LOW);

	}
	return 0;
}
